{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\OutSource\\\\Tenant-Rent-Management\\\\tenant-rent-app\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// src/components/ProtectedRoute.js\n\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  element,\n  ...rest\n}) {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth(); // Check if the user is authenticated\n\n  if (!isAuthenticated) {\n    // If not authenticated, redirect to login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If authenticated, render the component\n  return element;\n}\n_s(ProtectedRoute, \"1LGxUrjNz4q7iKM/2JDC9lJQ3xY=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","element","rest","_s","isAuthenticated","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adity/OutSource/Tenant-Rent-Management/tenant-rent-app/src/components/ProtectedRoute.js"],"sourcesContent":["// src/components/ProtectedRoute.js\r\n\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../AuthContext';\r\n\r\nfunction ProtectedRoute({ element, ...rest }) {\r\n    const { isAuthenticated } = useAuth(); // Check if the user is authenticated\r\n\r\n    if (!isAuthenticated) {\r\n        // If not authenticated, redirect to login\r\n        return <Navigate to=\"/\" replace />;\r\n    }\r\n\r\n    // If authenticated, render the component\r\n    return element;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,cAAcA,CAAC;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM;IAAEC;EAAgB,CAAC,GAAGP,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEvC,IAAI,CAACO,eAAe,EAAE;IAClB;IACA,oBAAOL,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtC;;EAEA;EACA,OAAOT,OAAO;AAClB;AAACE,EAAA,CAVQH,cAAc;EAAA,QACSH,OAAO;AAAA;AAAAc,EAAA,GAD9BX,cAAc;AAYvB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}